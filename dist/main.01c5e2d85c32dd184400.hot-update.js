webpackHotUpdate("main",{

/***/ "./src/lib/stdlib.glsl":
/*!*****************************!*\
  !*** ./src/lib/stdlib.glsl ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"#ifndef M_STDLIB\\n#define M_STDLIB\\n#ifndef PI\\n#define PI 3.141592653589793\\n#endif\\n#ifndef FLT_EPSILON\\n#define FLT_EPSILON 0.000001\\n#endif\\nfloat atan2(float dy, float dx) {\\n\\tfloat ax = abs(dx);\\n\\tfloat ay = abs(dy);\\n\\tfloat a = min(ax, ay) / (max(ax, ay) + FLT_EPSILON);\\n\\tfloat s = a * a;\\n\\tfloat r = ((((((-0.0464964749 * s) + 0.15931422) * s) - 0.327622764) * s) * a) + a;\\n\\tif (ay > ax)\\n\\t\\tr = 1.57079637 - r;\\n\\tif (dx < 0.0)\\n\\t\\tr = PI - r;\\n\\tif (dy < 0.0)\\n\\t\\tr = -r;\\n\\treturn r;\\n}\\nfloat atan2(vec2 v) {\\n\\treturn atan2(v.y, v.x);\\n}\\nfloat angle(vec2 v1, vec2 v2) {\\n\\tfloat ang = atan2(v1) - atan2(v2);\\n\\tif (ang < 0.0)\\n\\t\\tang += (2.0 * PI);\\n\\treturn ang;\\n}\\nfloat angle(vec2 v) {\\n\\treturn angle(v, vec2(1.0, 0.0));\\n}\\nvec2 center(vec2 v) {\\n\\treturn v * 0.5;\\n}\\nvec2 center(vec2 v1, vec2 v2) {\\n\\treturn (v1 + v2) * 0.5;\\n}\\nhighp float random(vec2 co) {\\n\\thighp float a = 12.9898;\\n\\thighp float b = 78.233;\\n\\thighp float c = 43758.5453;\\n\\thighp float dt = dot(co.xy, vec2(a, b));\\n\\thighp float sn = mod(dt, 3.14);\\n\\treturn fract(sin(sn) * c);\\n}\\nhighp float random(vec2 st, float a, float b) {\\n\\thighp float p = random(st);\\n\\treturn mix(a, b, p);\\n}\\nhighp vec2 random2(vec2 st) {\\n\\thighp vec2 v = vec2(dot(st, vec2(127.1, 311.7)), dot(st, vec2(269.5, 183.3)));\\n\\treturn -1.0 + (2.0 * fract(sin(v) * 43758.5453123));\\n}\\nhighp vec3 random3(vec2 st) {\\n\\thighp vec3 v = vec3(random2(st), random(st));\\n\\treturn v;\\n}\\nhighp float noise(vec2 st) {\\n\\tvec2 i = floor(st);\\n\\tvec2 f = fract(st);\\n\\tvec2 u = (f * f) * (3.0 - (2.0 * f));\\n\\treturn mix(mix(random(i + vec2(0.0, 0.0)), random(i + vec2(1.0, 0.0)), u.x), mix(random(i + vec2(0.0, 1.0)), random(i + vec2(1.0, 1.0)), u.x), u.y);\\n}\\nhighp float noise(vec3 p) {\\n\\tvec3 i = floor(p);\\n\\tvec4 a = dot(i, vec3(1.0, 57.0, 21.0)) + vec4(0.0, 57.0, 21.0, 78.0);\\n\\tvec3 f = (cos((p - i) * acos(-1.0)) * -0.5) + 0.5;\\n\\ta = mix(sin(cos(a) * a), sin(cos(1.0 + a) * (1.0 + a)), f.x);\\n\\ta.xy = mix(a.xz, a.yw, f.y);\\n\\treturn mix(a.x, a.y, f.z);\\n}\\nvec2 polar(vec2 st, vec2 c) {\\n\\tvec2 p = c - st;\\n\\tfloat r = length(p) * 2.0;\\n\\tfloat a = atan(p.y, p.x);\\n\\treturn vec2(r, a);\\n}\\nvec2 polar(vec2 st) {\\n\\treturn polar(st, vec2(0.5));\\n}\\n#endif\\n\"\n\n//# sourceURL=webpack://Doodle/./src/lib/stdlib.glsl?");

/***/ })

})